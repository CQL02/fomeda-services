import { ISubcategorySpecificationService } from "../interfaces/subcategory-specification.service.interface";
import { SubcategorySpecificationDto } from "../../dtos/subcategory-specification.dto";
import { SubcategorySubspecificationDto } from "../../dtos/subcategory-subspecification.dto";
import { SubcategorySpecificationRepository } from "../../domain/repositories/subcategory-specification.repository";
import { SubcategorySubspecificationRepository } from "../../domain/repositories/subcategory-subspecification.repository";
import { CategoryMapper } from "../mapper/category.mapper";
import { IBaseSpecificationService } from "../interfaces/base-specification.service.interface";
import { ICategoryService } from "../interfaces/category.service.interface";
import { ISequenceService } from "../../../sequence/services/interfaces/sequence.service.interface";
import { ProductFormSpecificationDto } from "../../dtos/product-form-specification.dto";
import { IGeneralSpecificationService } from "../interfaces/general-specification.service.interface";
import { Request } from "express";
export declare class SubcategorySpecificationService implements ISubcategorySpecificationService {
    private readonly subcategorySpecificationRepository;
    private readonly subcategorySubspecificationRepository;
    private readonly categoryMapper;
    private readonly sequenceService;
    private readonly categoryService;
    private readonly baseSpecificationService;
    private readonly generalSpecificationService;
    constructor(subcategorySpecificationRepository: SubcategorySpecificationRepository, subcategorySubspecificationRepository: SubcategorySubspecificationRepository, categoryMapper: CategoryMapper, sequenceService: ISequenceService, categoryService: ICategoryService, baseSpecificationService: IBaseSpecificationService, generalSpecificationService: IGeneralSpecificationService);
    createSubcategorySpecification(req: Request, subcategorySpecificationDto: SubcategorySpecificationDto): Promise<SubcategorySpecificationDto>;
    findSubcategorySpecificationByCatId(id: string): Promise<SubcategorySpecificationDto[]>;
    findActiveSubcategorySpecificationByCatId(id: string): Promise<SubcategorySpecificationDto[]>;
    findActiveSubcategorySpecificationByCatIdsAndSubcatIds(cat_ids: string[], subcat_ids: string[]): Promise<SubcategorySpecificationDto[]>;
    findSubcategorySpecificationById(id: string): Promise<SubcategorySpecificationDto>;
    getProductSpecificationBySubcatId(id: string): Promise<ProductFormSpecificationDto[]>;
    updateSubcategorySpecification(req: Request, id: string, subcategorySpecificationDto: SubcategorySpecificationDto): Promise<SubcategorySpecificationDto>;
    deactivateSubcategorySpecification(req: Request, id: string, is_active: boolean): Promise<SubcategorySpecificationDto>;
    deleteSubcategorySpecification(id: string): Promise<SubcategorySpecificationDto>;
    createSubcategorySubspecification(req: Request, subcategorySubspecificationDto: SubcategorySubspecificationDto): Promise<SubcategorySubspecificationDto>;
    findSubcategorySubspecificationById(id: string): Promise<SubcategorySubspecificationDto>;
    updateSubcategorySubspecification(req: Request, id: string, subcategorySubspecificationDto: SubcategorySubspecificationDto): Promise<SubcategorySubspecificationDto>;
    deactivateSubcategorySubspecification(req: Request, id: string, is_active: boolean): Promise<SubcategorySubspecificationDto>;
    deleteSubcategorySubspecification(id: string): Promise<SubcategorySubspecificationDto>;
}
